package com.dimosoftware.devplugin.servlets;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.yellowbox.plugin.v3.ParamValues;
import com.yellowbox.plugin.v3.Servlet;

public class QRCodeServlet extends Servlet {

	
	//ParamValues : string // variable typeOperation ("generate") / variable typeTyppant ("chien")
	@Override
	public String call(ParamValues paramsServlet) 
	{
		String typeOperation = paramsServlet.getStringValue("typeOperation");
		
		if(typeOperation.equals("generate"))
		{
	        String data = "Je suis Thierry et je suis gentil.";
	        int size = 400;

	        // encode
	        BitMatrix bitMatrix = null;
			try 
			{
				bitMatrix = generateMatrix(data, size);
			} 
			catch (WriterException e) 
			{
				// TODO Auto-generated catch block
				typeOperation = "Erreur GenerateMatrixe";
				e.printStackTrace();
			}

	        String imageFormat = "png";
	        String outputFileName = "c:/code/qrcode-01." + imageFormat;

	        // write in a file
	        try 
	        {
				writeImage(outputFileName, imageFormat, bitMatrix);
			} 
	        catch (IOException e) 
	        {
				// TODO Auto-generated catch block
	        	typeOperation = "Erreur WriteImage";
				e.printStackTrace();
			}
		}

		// Si pas le bon type, on renvoie le compteur tel quel
		return typeOperation;
	}
	
	@Override
	public String getName() {
		return "QRCodeServlet";
	}
	
    private static BitMatrix generateMatrix(String data, int size) throws WriterException 
    {
        BitMatrix bitMatrix = new QRCodeWriter().encode(data, BarcodeFormat.QR_CODE, size, size);
        return bitMatrix;
    }

    private static void writeImage(String outputFileName, String imageFormat, BitMatrix bitMatrix) throws IOException  
    {
        FileOutputStream fileOutputStream = new FileOutputStream(new File(outputFileName));
        MatrixToImageWriter.writeToStream(bitMatrix, imageFormat, fileOutputStream);
        fileOutputStream.close();
    }

}
